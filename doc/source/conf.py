# This file is part of reborn <https://kirianlab.gitlab.io/reborn/>.
#
# reborn is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# reborn is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with reborn.  If not, see <https://www.gnu.org/licenses/>.

# -*- coding: utf-8 -*-
#
# reborn documentation build configuration file, created by
# sphinx-quickstart on Sun Mar  5 00:26:44 2017.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

import sys
import os
import datetime
# import shlex

intersphinx_mapping = {'python': ('http://docs.python.org/2', None),
                       'numpy': ('http://docs.scipy.org/doc/numpy/', None),
                       'scipy': ('http://docs.scipy.org/doc/scipy/reference/', None),
                       'matplotlib': ('http://matplotlib.sourceforge.net/', None)}

# These are shortcuts that can be used in the reborn docs.
rst_epilog = """
.. |examples|  replace:: :ref:`examples`
.. |binning|  replace:: :ref:`binning`
.. |detector_documentation|  replace:: :ref:`detector documentation <doc_detectors>`

.. |Beam|  replace:: :class:`Beam <reborn.source.Beam>`
.. |ClCore|  replace:: :mod:`ClCore <reborn.simulate.clcore.ClCore>`
.. |CSPAD|  replace:: `CSPAD <http://www.slac.stanford.edu/cgi-wrap/getdoc/slac-pub-15284.pdf>`__
.. |detector|  replace:: :mod:`detector <reborn.detector>`
.. |PAD|  replace:: :mod:`detector <reborn.detector>`
.. |PADGeometry|  replace:: :class:`PADGeometry <reborn.detector.PADGeometry>`
.. |PADGeometryList|  replace:: :class:`PADGeometryList <reborn.detector.PADGeometryList>`
.. |FrameGetter|  replace:: :class:`FrameGetter <reborn.fileio.getters.FrameGetter>`
.. |DataFrame|  replace:: :class:`DataFrame <reborn.dataframe.DataFrame>`
.. |PADView|  replace:: :class:`PADView <reborn.viewers.qtviews.PADView>`
.. |RadialProfiler|  replace:: :class:`RadialProfiler <reborn.detector.RadialProfiler>`

.. |ndarray|  replace:: :class:`ndarray <numpy.ndarray>`
.. |slice|  replace:: `slice <https://docs.python.org/dev/library/functions.html#slice>`__
.. |sliced|  replace:: `sliced <https://docs.python.org/dev/library/functions.html#slice>`__

.. |reborn|  replace:: `reborn <https://kirianlab.gitlab.io/reborn/>`__
.. |Jungfrau|  replace:: `Jungfrau <https://lcls.slac.stanford.edu/detectors/jungfrau>`__
.. |xraylib|  replace:: `xraylib <https://github.com/tschoonj/xraylib/wiki>`__
.. |pyopencl|  replace:: `pyopencl <https://documen.tician.de/pyopencl/index.html>`__
.. |pytest|  replace:: `pytest <http://doc.pytest.org/>`__
.. |Miniconda|  replace:: `Miniconda <https://conda.io/miniconda.html>`__
.. |scipy|  replace:: `scipy <https://www.scipy.org>`__
.. |pyqtgraph|  replace:: `pyqtgraph <http://www.pyqtgraph.org>`__
.. |numpy|  replace:: `numpy <https://numpy.org>`__
.. |git|  replace:: `git <https://git-scm.com>`__
.. |matplotlib|  replace:: `matplotlib <https://matplotlib.org/>`__
.. |pycodestyle|  replace:: `pycodestyle <https://pypi.org/project/pycodestyle/>`__
.. |spherical_coordinates|  replace:: `spherical coordinates <https://en.wikipedia.org/wiki/Spherical_coordinate_system>`__
.. |psana|  replace:: `psana <https://pswww.slac.stanford.edu/swdoc/releases/ana-current/psana-ref/html/psana/>`__
.. |pyqt5|  replace:: `pyqt5 <https://pypi.org/project/PyQt5/>`__
.. |bash| replace:: `bash <https://www.gnu.org/software/bash/manual/html_node/What-is-Bash_003f.html>`__
.. |f2py| replace:: `f2py <https://numpy.org/doc/stable/f2py/>`__

.. |dipole_notes|  replace:: `diffraction notes <_static/files/dipole.pdf>`__

.. |GriffithsEM|  replace:: `Griffiths E&M <https://www.cambridge.org/core/books/introduction-to-electrodynamics/3AB220820DBB628E5A43D52C4B011ED4>`__
.. |Cromer1968|  replace:: `Cromer et al. (1968) <https://doi.org/10.1107/S0567739468000550>`__
.. |Hubbel1975|  replace:: `Hubbel et al. (1975) <https://doi.org/10.1063/1.555523>`__
.. |Henke1993|  replace:: `Henke et al. (1993) <https://doi.org/10.1006/adnd.1993.1013>`__
.. |Guinier|  replace:: `Guinier (1964) <https://doi.org/10.1021/ed041p292.2>`__
"""


# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
# sys.path.insert(0, os.path.abspath('../../reborn'))
sys.path.insert(0, os.path.abspath('../..'))

def setup(app):
    app.add_css_file('css/custom.css')

# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be extensions coming with Sphinx
# (named 'sphinx.ext.*') or your custom ones.
extensions = [
    'sphinx.ext.autodoc',
    'sphinx.ext.mathjax',
    'sphinx.ext.viewcode',
    'sphinx.ext.napoleon',
    'sphinx.ext.doctest',
    'sphinx.ext.intersphinx',
    'sphinx_gallery.gen_gallery',
    'scrapers']




# Configuration for the documentation of examples
sphinx_gallery_conf = {
    'filename_pattern': '/example_',
    'ignore_pattern': r'__init__\.py',
    'show_memory': True
}

try:
    import scrapers
    sphinx_gallery_conf['image_scrapers'] = ('matplotlib', scrapers.qt.qtscraper)
    sphinx_gallery_conf['reset_modules'] = scrapers.qt.reset_qapp
except ImportError:
    pass

# Don't sort autodocumention alphabetically
autodoc_member_order = 'bysource'

# Try to document __init__ functions of classes
autoclass_content = 'both'

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames. You can specify multiple suffix as a list of string:
# source_suffix = ['.rst', '.md']
source_suffix = ['.rst']

# The encoding of source files.
# source_encoding = 'utf-8-sig'

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = u'reborn'
copyright = u'2017, Richard A Kirian'
author = u'Richard A Kirian'

# The version info for the project you're documenting, acts as replacement for |version| and |release|, also used in
# various other places throughout the built documents.
#
# The short X.Y version.
version = datetime.date.today().strftime('%Y.%m.%d').replace('.0', '.') # Yields string like '2019.6.30'
# The full version, including alpha/beta/rc tags.
release = version

# The language for content autogenerated by Sphinx. Refer to documentation for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs. Usually you set "language" from the command
# line for these cases.
language = 'en'

# There are two options for replacing |today|: either, you set today to some non-false value, then it is used:
# today = ''
# Else, today_fmt is used as the format for a strftime call.
# today_fmt = '%B %d, %Y'

# List of patterns, relative to source directory, that match files and directories to ignore when looking for source
# files. RICK: THIS DOES NOTHING SO FAR AS I CAN SEE...
exclude_patterns = ['plugins', '*placer*', '*_f']
autodoc_default_options = {
    # 'members': 'var1, var2',
    'member-order': 'bysource',
    # 'special-members': '__init__',
    'undoc-members': True,
    'exclude-members': '*cpython*'
}

# The reST default role (used for this markup: `text`) to use for all documents.
# default_role = None

# If true, '()' will be appended to :func: etc. cross-reference text.
add_function_parentheses = False

# If true, the current module name will be prepended to all description unit titles (such as .. function::).
# add_module_names = True

# If true, sectionauthor and moduleauthor directives will be shown in the output. They are ignored by default.
# show_authors = False

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# A list of ignored prefixes for module index sorting.
# modindex_common_prefix = []

# If true, keep warnings as "system message" paragraphs in the built documents.
# keep_warnings = False

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = False


# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for a list of builtin themes.
import sphinx_rtd_theme
html_theme = "sphinx_rtd_theme"
html_theme_path = [sphinx_rtd_theme.get_html_theme_path()]

# Theme options are theme-specific and customize the look and feel of a theme further.  For a list of options available
# for each theme, see the documentation.
html_theme_options = {'sidebarwidth': 100}

# Add any paths that contain custom themes here, relative to this directory.
# html_theme_path = []

# The name for this set of Sphinx documents.  If None, it defaults to "<project> v<release> documentation".
# html_title = None

# A shorter title for the navigation bar.  Default is the same as html_title.
# html_short_title = None

# The name of an image file (relative to this directory) to place at the top of the sidebar.
# html_logo = None

# The name of an image file (within the static path) to use as favicon of the docs.  This file should be a Windows icon
# file (.ico) being 16x16 or 32x32 pixels large.
# html_favicon = None

# Add any paths that contain custom static files (such as style sheets) here, relative to this directory. They are
# copied after the builtin static files, so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']
html_css_files = ['custom.css']

# Add any extra paths that contain custom files (such as robots.txt or .htaccess) here, relative to this directory.
# These files are copied directly to the root of the documentation.
# html_extra_path = []

# If not '', a 'Last updated on:' timestamp is inserted at every page bottom, using the given strftime format.
# html_last_updated_fmt = '%b %d, %Y'

# If true, SmartyPants will be used to convert quotes and dashes to typographically correct entities.
# html_use_smartypants = True

# Custom sidebar templates, maps document names to template names.
html_sidebars = {'**': ['globaltoc.html', 'relations.html', 'sourcelink.html', 'searchbox.html']}

# Additional templates that should be rendered to pages, maps page names to template names.
# html_additional_pages = {}

# If false, no module index is generated.
# html_domain_indices = True

# If false, no index is generated.
# html_use_index = True

# If true, the index is split into individual pages for each letter.
# html_split_index = False

# If true, links to the reST sources are added to the pages.
html_show_sourcelink = True

# If true, "Created using Sphinx" is shown in the HTML footer. Default is True.
html_show_sphinx = True

# If true, "(C) Copyright ..." is shown in the HTML footer. Default is True.
html_show_copyright = False

# If true, an OpenSearch description file will be output, and all pages will contain a <link> tag referring to it.  The
# value of this option must be the base URL from which the finished HTML is served.
# html_use_opensearch = ''

# This is the file name suffix for HTML files (e.g. ".xhtml").
# html_file_suffix = None

# Language to be used for generating the HTML full-text search index. Sphinx supports the following languages:
#   'da', 'de', 'en', 'es', 'fi', 'fr', 'hu', 'it', 'ja', 'nl', 'no', 'pt', 'ro', 'ru', 'sv', 'tr'
# html_search_language = 'en'

# A dictionary with options for the search language support, empty by default. Now only 'ja' uses this config value
# html_search_options = {'type': 'default'}

# The name of a javascript file (relative to the configuration directory) that implements a search results scorer. If
# empty, the default will be used.
# html_search_scorer = 'scorer.js'

# Output file base name for HTML help builder.
htmlhelp_basename = 'reborndoc'

# -- Options for LaTeX output ---------------------------------------------

latex_elements = {
# The paper size ('letterpaper' or 'a4paper').
# 'papersize': 'letterpaper',

# The font size ('10pt', '11pt' or '12pt').
# 'pointsize': '10pt',

# Additional stuff for the LaTeX preamble.
#'preamble': '',

# Latex figure (float) alignment
# 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples (source start file, target name, title, author,
# documentclass [howto, manual, or own class]).
latex_documents = [
  (master_doc, 'reborn.tex', u'reborn Documentation',
   u'Richard A Kirian', 'manual'),
]

# The name of an image file (relative to this directory) to place at the top of the title page.
# latex_logo = None

# For "manual" documents, if this is true, then toplevel headings are parts, not chapters.
# latex_use_parts = False

# If true, show page references after internal links.
# latex_show_pagerefs = False

# If true, show URL addresses after external links.
# latex_show_urls = False

# Documents to append as an appendix to all manuals.
# latex_appendices = []

# If false, no module index is generated.
# latex_domain_indices = True


# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'reborn', u'reborn Documentation',
     [author], 1)
]

# If true, show URL addresses after external links.
# man_show_urls = False


# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
  (master_doc, 'reborn', u'reborn Documentation',
   author, 'reborn', 'One line description of project.',
   'Miscellaneous'),
]

# Documents to append as an appendix to all manuals.
# texinfo_appendices = []

# If false, no module index is generated.
# texinfo_domain_indices = True

# How to display URL addresses: 'footnote', 'no', or 'inline'.
# texinfo_show_urls = 'footnote'

# If true, do not generate a @detailmenu in the "Top" node's menu.
# texinfo_no_detailmenu = False

math_number_all = True

# Monkey-patch functools.wraps
# See: https://github.com/sphinx-doc/sphinx/issues/1711
# import functools
# def no_op_wraps(func):
#     """
#     Replaces functools.wraps in order to undo wrapping when generating Sphinx documentation
#     """
#     if func.__module__ is None or 'MY_PACKAGE_NAME' not in func.__module__:
#         return functools.orig_wraps(func)
#     def wrapper(decorator):
#         return func
#     return wrapper
# functools.orig_wraps = functools.wraps
# functools.wraps = no_op_wraps
# import contextlib
# contextlib.wraps = no_op_wraps
